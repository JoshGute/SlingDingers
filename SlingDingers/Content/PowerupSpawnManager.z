class PowerupSpawnManager : ZilchComponent
{
    [Property]var  Player1 : CogPath;
    [Property]var  Player2 : CogPath;
    
    var TimeBetweenPowerups : Real = 6;
    var TimeCurrent : Real = 0;
    
    function Initialize(init : CogInitializer)
    {
        Zero.Connect(this.Space, Events.LogicUpdate, this.OnLogicUpdate);
        Zero.Connect(Zero.Keyboard, Events.KeyDown, this.OnKeyDown);
        //Zero.Connect(this.GameSession, Events.LevelStarted, this.OnLevelStarted);
        Zero.Connect(this.Space, Events.VictoryEvent, this.OnVictoryEvent);
    }

    function OnVictoryEvent(event : Event)
    {
        PowerUpSpawn.AllPowerupSpawners.Clear();
    }

    function OnLevelStarted(event : GameEvent)
    {
        PowerUpSpawn.AllPowerupSpawners.Clear();
    }

    function OnKeyDown(event : KeyboardEvent)
    {
        if(event.Key == Keys.Space)
        {
            this.PowerupTime();
        }
    }

    function OnLogicUpdate(event : UpdateEvent)
    {
        this.TimeCurrent -= event.Dt;
        
        if(this.TimeCurrent <= 0)
        {
            this.TimeCurrent = this.TimeBetweenPowerups;
            this.PowerupTime();
        }
    }
    
    function PowerupTime()
    {
        var minDist = 1000000000.0;
        
        var chosenOne : PowerUpSpawn = null;
        
        if(this.Player1.Cog == null || this.Player2.Cog == null || PowerUpSpawn.AllPowerupSpawners.Count == 0)
            return;
            
        foreach(var i in PowerUpSpawn.AllPowerupSpawners)
        {
            if(i != null)
            {
                var distDiff = i.CompareDists(this.Player1.Cog.Transform.Translation, this.Player2.Cog.Transform.Translation);
                if(distDiff < minDist && i.CurPowerup.Cog == null)
                {
                    minDist = distDiff;
                    chosenOne = i;
                }
                //Console.WriteLine("`distDiff`");
            }
        }
        
        if(chosenOne != null && chosenOne.CurPowerup.Cog == null)
        {
            chosenOne.SpawnPowerup();
        }
    }
}
