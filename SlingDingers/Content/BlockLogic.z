class BlockLogic : ZilchComponent
{
    sends OnBlockDestroy : OnBlockDestroy;
    
    function Initialize(init : CogInitializer)
    {
        //Zero.Connect(this.Space, Events.LogicUpdate, this.OnLogicUpdate);
        Zero.Connect(this.Owner, Events.OnBlockDestroy, this.OnOnBlockDestroy);
        Zero.Connect(this.Space, Events.MouseDown, this.OnMouseDown);
    }

    function OnMouseDown(event : ViewportMouseEvent)
    {
        if(event.HitObject != null && event.HitObject == this.Owner)
        {
            this.Owner.DispatchEvent(Events.OnBlockDestroy, new OnBlockDestroy());
        }
    }

    function OnOnBlockDestroy(event : Event)
    {
        this.Space.CreateAtPosition(Archetype.DestructionParticleEffect, this.Owner.Transform.Translation);
        this.LevelSettings.CameraViewport.Camera.ScreenShake.ShakeParam(0.015, 0.2, 19.0, this.LevelSettings.CameraViewport.Camera.Transform.Translation - this.Owner.Transform.Translation, 0);
        
        var seq = Actions.Sequence(this.Owner.Actions);
        
        Actions.Property(seq, @this.Owner.MultiSprite.Color, Real4(0, 0, 0, 0), 0.3, Ease.QuadOut);
        Actions.Call(seq, this.Owner.Destroy);
    }

    function OnLogicUpdate(event : UpdateEvent)
    {
    }
}
